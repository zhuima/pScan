version: '3'

vars:
  # version
  VERSION: "0.0.2"

  # gitTag
  GITTAG: 
    sh: echo "$(git log --pretty=format:'%h' -n 1)"

  # commitID
  GITCOMMIT:
    sh: echo "$(git rev-parse --short HEAD)"

  # gitBranch
  GITBRANCH:
    sh: echo "$(git rev-parse --abbrev-ref HEAD)"

  # time
  BUILDTIME: 
    sh: echo "$(TZ=Asia/Shanghai date +%FT%T%z)"


  # Goversion
  GOVERSION:
    sh: echo "$(go version | awk -F'version' '{print $2}' | awk '{print $1}')"


tasks:
  up:
    desc: "Run docker compose and subscribe to logs"
    deps: [down]
    cmds:
      - docker-compose up --build -d
      - docker logs -f api
  down:
    desc: "Stop docker compose"
    silent: true
    cmds:
      - docker-compose down
  coverage:
    desc: 'Run tests with coverage and open report in default browser'
    cmds:
      - go test -coverprofile=./tmp/cover.out ./...
      - go tool cover -html=./tmp/cover.out -o ./tmp/cover.html
      - open ./tmp/cover.html
  attach_hooks:
    desc: "Attach git hooks"
    cmds:
      - cp ./tools/pre-commit.sh ./.git/hooks/pre-commit
      - cp ./tools/pre-push.sh ./.git/hooks/pre-push
      - chmod 777 ./.git/hooks/pre-commit
      - chmod 777 ./.git/hooks/pre-push
  lint:
    desc: "Run linter"
    cmds:
      - golangci-lint run --tests=0 ./...
  test:
    desc: "Run tests"
    cmds:
      - go test -v 

  ready:
    desc: "Ready build"
    cmds:
      - GOPROXY=https://goproxy.io
      - go mod tidy

  build:
    desc: "Run build"
    cmds:
      # - go build -ldflags '-s -w' "-X 'github.com/zhuima/pScan/cmd/version.version=0.1'"  -o dist/pScan main.go
      - go build -ldflags="-s -w -X 'github.com/zhuima/pScan/cmd.version={{ .VERSION }}' -X 'github.com/zhuima/pScan/cmd.buildTime={{ .BUILDTIME }} '  -X 'github.com/zhuima/pScan/cmd.gitCommit={{ .GITCOMMIT }}' -X 'github.com/zhuima/pScan/cmd.goVersion={{ .GOVERSION }}'"  -o dist/pscan main.go
    deps:
      - ready
      - clean


  goreleaser:
    desc: "Goreleaser Test"
    cmds:
      - goreleaser release --snapshot --skip-publish --rm-dist

  clean:
    desc: "Run clean"
    cmds:
      - rm -rf dist/*

